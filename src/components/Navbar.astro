<div
	class="fixed z-40 bg-white rounded-full top-4 right-4 shadow-md p-3 cursor-pointer"
	id="hamburger-btn"
>
	<svg
		xmlns="http://www.w3.org/2000/svg"
		x="0px"
		y="0px"
		width="30"
		height="30"
		viewBox="0 0 50 50"
		fill="#774F4F"
	>
		<path
			d="M 5 8 A 2.0002 2.0002 0 1 0 5 12 L 45 12 A 2.0002 2.0002 0 1 0 45 8 L 5 8 z M 5 23 A 2.0002 2.0002 0 1 0 5 27 L 45 27 A 2.0002 2.0002 0 1 0 45 23 L 5 23 z M 5 38 A 2.0002 2.0002 0 1 0 5 42 L 45 42 A 2.0002 2.0002 0 1 0 45 38 L 5 38 z"
		></path>
	</svg>
</div>

<!-- Full Screen Navbar -->
<div
	class="fixed inset-0 w-screen h-screen bg-[#774F4F] z-50 flex flex-col opacity-0 invisible"
	id="fullscreen-nav"
>
	<!-- Contenedor central: logo + men√∫ -->
	<div class="flex flex-1 w-full px-6 md:px-12 items-center justify-center">
		<div
			class="flex flex-col md:flex-row items-center md:items-start gap-10 md:gap-20"
		>
			<!-- Logo -->
			<div class="flex flex-col items-center md:items-start">
				<img
					src="/assets/logos/logo-rumbo-min.png"
					alt="Logo"
					class="w-[clamp(150px,20vw,400px)] mb-6"
				/>
			</div>

			<!-- Men√∫ + contacto -->
			<div
				class="flex flex-col items-center md:items-start text-center md:text-left"
			>
				<!-- Links -->
				<div
					class="nav-item text-xl md:text-2xl lg:text-[3vw] font-bold text-[#E2D9D5] my-3 cursor-pointer hover:text-gray-200 opacity-0 translate-y-12 transition-colors duration-300 font-archive"
				>
					INICIO
				</div>
				<div
					class="nav-item text-xl md:text-2xl lg:text-[3vw] font-bold text-[#E2D9D5] my-3 cursor-pointer hover:text-gray-200 opacity-0 translate-y-12 transition-colors duration-300 font-archive"
				>
					FOTOGRAF√çA Y VIDEO
				</div>
				<div
					class="nav-item text-xl md:text-2xl lg:text-[3vw] font-bold text-[#E2D9D5] my-3 cursor-pointer hover:text-gray-200 opacity-0 translate-y-12 transition-colors duration-300 font-archive"
				>
					DISE√ëO
				</div>
				<div
					class="nav-item text-xl md:text-2xl lg:text-[3vw] font-bold text-[#E2D9D5] my-3 cursor-pointer hover:text-gray-200 opacity-0 translate-y-12 transition-colors duration-300 font-archive"
				>
					SOBRE NOSOTROS
				</div>
				<div
					class="nav-item text-xl md:text-2xl lg:text-[3vw] font-bold text-[#E2D9D5] my-3 cursor-pointer hover:text-gray-200 opacity-0 translate-y-12 transition-colors duration-300 font-archive"
				>
					CONTACTO
				</div>

				<!-- Contacto -->
				<div class="mt-8 md:mt-10 text-[#E2D9D5]">
					<p class="text-sm md:text-lg lg:text-xl xl:text-2xl">
						instagram: <span class="font-semibold">rumbo.comunicacion</span>
					</p>
					<p class="text-sm md:text-lg lg:text-xl xl:text-2xl">
						email: <span class="font-semibold">rumbo@gmail.com</span>
					</p>
				</div>
			</div>
		</div>
	</div>

	<!-- Bot√≥n de cerrar -->
	<div
		class="absolute top-5 right-5 w-12 h-12 bg-white rounded-full flex items-center justify-center cursor-pointer opacity-0 transform rotate-45"
		id="close-btn"
	>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 24 24"
			class="w-7 h-7 fill-[#774F4F]"
		>
			<path
				d="M18 6L6 18M6 6l12 12"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"></path>
		</svg>
	</div>
</div>

<script>
	import gsap from "gsap";
	import { SplitText } from "gsap/SplitText";

	gsap.registerPlugin(SplitText);

	// Tipado de los elementos del DOM
	const hamburgerBtn = document.getElementById(
		"hamburger-btn",
	) as HTMLButtonElement | null;
	const fullscreenNav = document.getElementById(
		"fullscreen-nav",
	) as HTMLElement | null;
	const closeBtn = document.getElementById(
		"close-btn",
	) as HTMLButtonElement | null;
	const navItems = document.querySelectorAll<HTMLElement>(".nav-item");

	let isNavOpen = false;

	function openNav(): void {
		if (isNavOpen) return;
		isNavOpen = true;

		// üö´ Bloquear scroll en toda la p√°gina
		document.body.classList.add("overflow-hidden");

		const splitTexts: SplitText[] = [];
		navItems.forEach((item) => {
			splitTexts.push(new SplitText(item, { type: "chars" }));
		});

		const tl = gsap.timeline();

		if (fullscreenNav && closeBtn) {
			tl.set(fullscreenNav, { visibility: "visible" })
				.to(fullscreenNav, {
					opacity: 1,
					duration: 0.5,
					ease: "power2.out",
				})
				.to(
					closeBtn,
					{
						opacity: 1,
						rotation: 0,
						duration: 0.3,
						ease: "back.out(1.7)",
					},
					"-=0.3",
				);
		}

		splitTexts.forEach((splitText, index) => {
			const item = navItems[index];
			tl.to(
				item,
				{
					opacity: 1,
					y: 0,
					duration: 0.1,
				},
				"-=0.1",
			).from(
				splitText.chars,
				{
					opacity: 0,
					y: 50,
					rotationX: -90,
					stagger: 0.02,
					duration: 0.2,
					ease: "back.out(1.7)",
				},
				"-=0.1",
			);
		});
	}

	function closeNav(): void {
		if (!isNavOpen) return;
		isNavOpen = false;

		// ‚úÖ Restaurar scroll
		document.body.classList.remove("overflow-hidden");

		const tl = gsap.timeline();
		tl.to(navItems, {
			opacity: 0,
			y: 50,
			duration: 0.3,
			stagger: 0.05,
			ease: "power2.in",
		});

		if (closeBtn) {
			tl.to(
				closeBtn,
				{
					opacity: 0,
					rotation: 45,
					duration: 0.2,
				},
				"-=0.2",
			);
		}

		if (fullscreenNav) {
			tl.to(
				fullscreenNav,
				{
					opacity: 0,
					duration: 0.4,
					ease: "power2.in",
				},
				"-=0.1",
			).set(fullscreenNav, { visibility: "hidden" });
		}
	}

	// Event listeners
	hamburgerBtn?.addEventListener("click", openNav);
	closeBtn?.addEventListener("click", closeNav);

	// Cerrar con Escape
	document.addEventListener("keydown", (e: KeyboardEvent) => {
		if (e.key === "Escape" && isNavOpen) {
			closeNav();
		}
	});

	// Cerrar al hacer click en un item del men√∫
	navItems.forEach((item) => {
		item.addEventListener("click", () => {
			console.log(`Navegando a: ${item.textContent}`);
			closeNav();
		});
	});
</script>
